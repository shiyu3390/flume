a1.sources = postgresql
a1.sinks = k1 
a1.channels = c1

a1.sources.postgresql.type = org.apache.flume.source.sinorail.test.taildir.TaildirSource
a1.sources.postgresql.channels = c1
a1.sources.postgresql.skipToEnd = true
a1.sources.postgresql.positionFile = ./postgresql.json
a1.sources.postgresql.filegroups = f1
a1.sources.postgresql.fileHeader = true
a1.sources.postgresql.interceptors = i1 i3 i4
a1.sources.postgresql.interceptors.i1.type = host
a1.sources.postgresql.interceptors.i1.useIP = false
a1.sources.postgresql.interceptors.i1.preserveExisting = true
a1.sources.postgresql.interceptors.i1.hostHeader = hostname
a1.sources.postgresql.multiline = true
a1.sources.postgresql.multilinePattern = (\\d{4}[-]\\d{2}[-]\\d{2}\\s+\\d{2}[:]\\d{2}[:]\\d{2})\\s+([\\s+\\S+]*)[:]{3}([\\S+]*)[:]{1}([\\s+\\S+]*)
a1.sources.postgresql.multilinePatternBelong = previous
a1.sources.postgresql.multilineMatched = false
a1.sources.postgresql.multilineEventTimeoutSeconds = 30
a1.sources.postgresql.multilineMaxBytes = 10485760
a1.sources.postgresql.multilineMaxLines = 500
a1.sources.postgresql.interceptors.i3.type = regex_extractor
a1.sources.postgresql.interceptors.i3.regex = (\\d{4}[-]\\d{2}[-]\\d{2}\\s+\\d{2}[:]\\d{2}[:]\\d{2})\\s+([\\s+\\S+]*)[:]{3}([\\S+]*)[:]{1}([\\s+\\S+]*)
a1.sources.postgresql.interceptors.i3.serializers = s1 s2 s3 s4
a1.sources.postgresql.interceptors.i3.serializers.s1.name = logDate
a1.sources.postgresql.interceptors.i3.serializers.s2.name = package
a1.sources.postgresql.interceptors.i3.serializers.s3.name = logLevel
a1.sources.postgresql.interceptors.i3.serializers.s4.name = logContent
a1.sources.postgresql.interceptors.i4.type = formatlogdate

a1.sources.postgresql.filegroups.f1 = /var/log/postgresql/.*.log
a1.sources.postgresql.headers.f1.isCloud = 0
a1.sources.postgresql.headers.f1.cluster = IAD
a1.sources.postgresql.headers.f1.module = Postgresql
a1.sources.postgresql.headers.f1.role = Postgresql
a1.sources.postgresql.headers.f1.dateFormat = yyyy-MM-dd HH:mm:ss

a1.channels.c1.type = org.apache.flume.sinorail.channel.kafka.KafkaChannel
a1.channels.c1.kafka.bootstrap.servers = BrokerLists
a1.channels.c1.kafka.topic = no_cloud_log_default
a1.channels.c1.parseAsFlumeEvent = false
